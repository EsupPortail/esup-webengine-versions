<?xml version="1.0"?>
<project name="esup-webengine-versions" default="deploy" basedir=".">

  <!-- From the pom.xml -->
  <property name="name" value="esup-webengine-versions" />
  <property name="version" value="1.0-SNAPSHOT" />

  <!-- Create a build.properties file from build.properties.sample
       if you wish to override the JBoss/Tomcat paths -->
  <property file="build.properties" />
	
  <property name="jboss.dir" value="/opt/jboss" />
		
  <property name="nuxeo.ear" value="nuxeo.ear" />

  <property name="javac.debug" value="true" />
  <property name="javac.deprecation" value="false" />

  <!-- Boilerplate configuration -->
	
  	<property name="build.dir" value="${basedir}/target" />
 
	<condition property="deploy.dir" value="${tomcat.dir}/templates/custom/bundles" else="${jboss.dir}/server/default/deploy/${nuxeo.ear}/plugins">
	   <isset property="tomcat.dir"/>
	</condition>

	<condition property="deployed.dir" value="${tomcat.dir}/nxserver/bundles" else="${jboss.dir}/server/default/deploy/${nuxeo.ear}/plugins">
	   <isset property="tomcat.dir"/>
	</condition>

	<condition property="deploy.war" value="${tomcat.dir}/nxserver/web/root.war" else="${jboss.dir}/server/default/deploy/${nuxeo.ear}/nuxeo.war">
	   <isset property="tomcat.dir"/>
	</condition>
  
	<property name="mvn.opts" value="-Dmaven.test.skip=true" />

  <condition property="osfamily-unix">
    <os family="unix" />
  </condition>
  <condition property="osfamily-windows">
    <os family="windows" />
  </condition>

	<!-- ==================== deploy Target =================================== -->
	<target name="deploy" depends="clean-target,install,copy" description="Build and copy to JBoss/Tomcat" />
	
	
	
	<property name="utils.dir" value="utils" />
	<property name="maven.url" value="http://www.apache.org/dist/maven/binaries" />
	<property name="maven.version" value="3.2.2" />
	<property name="maven.zipfile" value="apache-maven-${maven.version}-bin.zip" />
	<property name="maven.dir" value="${basedir}/${utils.dir}/apache-maven-${maven.version}" />
	<property name="maven.bin" value="${basedir}/${utils.dir}/apache-maven-${maven.version}/bin" />
	
	<macrodef name="maven">
    <attribute name="options" default="${mvn.opts}" />
    <attribute name="goal" />
    <attribute name="basedir" />
    <attribute name="resultproperty" default="maven.result" />
    <element name="args" implicit="true" optional="true" />
    <sequential>
    	<!-- l'attribut Nuxeo-WebModule dépasse la limite de  72 car./ligne, il est tronqué
    	<manifest file="${basedir}/src/main/resources/META-INF/MANIFEST.MF" mode="update">
    	    <attribute name="Nuxeo-WebModule" value="org.nuxeo.ecm.webengine.app.WebEngineModule;extends=base;package=org/esupportail/ecm/versions;name=${name}"/>
    	 </manifest>
    	-->
     <java classname="org.codehaus.classworlds.Launcher" fork="true"
            dir="@{basedir}" resultproperty="@{resultproperty}">
        <jvmarg value="-Xmx512m"/>
        <classpath>
          <fileset dir="${maven.dir}/boot">
            <include name="*.jar" />
          </fileset>
          <fileset dir="${maven.dir}/lib">
            <include name="*.jar" />
          </fileset>
        </classpath>
        <sysproperty key="classworlds.conf" value="${maven.bin}/m2.conf" />
        <sysproperty key="maven.home" value="${maven.dir}" />
      	<sysproperty key="maven.multiModuleProjectDirectory" value="${maven.dir}"/>
        <arg line="--batch-mode @{options} @{goal}" />
      </java>
        </sequential>
  </macrodef>


	<!-- ==================== depends-maven Target =================================== -->
	<target name="depends-maven">
		<available property="maven.dir.available" file="${maven.bin}"/>
	</target>

	<!-- ==================== download-maven Target =================================== -->
	<target name="download-maven" unless="maven.dir.available">
		<echo message="${maven.bin} non trouve, je telecharge..."/>
		<mkdir dir="utils"/>
		<get src="${maven.url}/${maven.zipfile}" dest="${utils.dir}/${maven.zipfile}"/>
		<unzip src="${utils.dir}/${maven.zipfile}" dest="${utils.dir}"/>
		<delete file="${utils.dir}/${maven.zipfile}"/>
		<echo message="maven.bin=${maven.bin}"/>
		<chmod dir="${maven.bin}" perm="755" includes="**/mvn*"/>
	</target>
	
	<target name="install" depends="depends-maven,download-maven" description="Build">
  		<echo message="execute mvn install"/>
		<maven basedir="${basedir}" goal="install" resultproperty="maven.build.result"/>
  	</target>

   <target name="copy" description="Copy files to JBoss/Tomcat">
    <delete>
      <!-- delete old versions of the project -->
      <fileset file="${deploy.dir}/${name}-*.jar" />
    </delete>
	<echo message="copy files to JBoss/Tomcat"/>
  	<copy todir="${deploy.dir}/" overwrite="true">
      <fileset dir="${build.dir}" casesensitive="yes">
        <include name="${name}-*.jar" />
        <exclude name="${name}-*-sources.jar" />
      </fileset>
    </copy>
    <!-- Could copy other files to .../config too -->
  </target>

  <target name="eclipseeclipse" depends="" description="Build">
	<echo message="execute mvn eclipse:eclipse"/>
	<maven basedir="${basedir}" goal="eclipse:eclipse" resultproperty="maven.build.result"/>
  </target>

  <target name="web" description="Copy web files to a live JBoss/Tomcat">
    <copy todir="${deploy.war}/modules/${name}" overwrite="true">
      <fileset dir="${basedir}/src/main/resources" />
    </copy>
  </target>

	
  <target name="clean-target" description="clean target">
    <delete  dir="target"/>
  </target>	

	
	
</project>
